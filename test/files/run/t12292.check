
scala> import scala.annotation.nowarn
import scala.annotation.nowarn

scala> import scala.collection.immutable.Stream
import scala.collection.immutable.Stream

scala> scala.#::.unapply(Stream(1))
                 ^
       warning: method unapply in object #:: is deprecated (since 2.13.0): Prefer LazyList instead
                         ^
       warning: object Stream in package immutable is deprecated (since 2.13.0): Use LazyList (which is fully lazy) instead of Stream (which has a lazy tail only)
val res0: Option[(Int, scala.collection.immutable.Stream[Int])] = Some((1,Stream()))

scala> scala.#::.unapply(Stream(1)): @nowarn
val res1: Option[(Int, scala.collection.immutable.Stream[Int])] @scala.annotation.nowarn = Some((1,Stream()))

scala> (scala.#::.unapply(Stream(1)): @nowarn)
val res2: Option[(Int, scala.collection.immutable.Stream[Int])] @scala.annotation.nowarn = Some((1,Stream()))

scala> scala.#::.unapply(Stream(1)): @inline
                 ^
       warning: method unapply in object #:: is deprecated (since 2.13.0): Prefer LazyList instead
                         ^
       warning: object Stream in package immutable is deprecated (since 2.13.0): Use LazyList (which is fully lazy) instead of Stream (which has a lazy tail only)
                                      ^
       warning: class Stream in package immutable is deprecated (since 2.13.0): Use LazyList (which is fully lazy) instead of Stream (which has a lazy tail only)
val res3: Option[(Int, scala.collection.immutable.Stream[Int])] @inline = Some((1,Stream()))

scala> (scala.#::.unapply(Stream(1)): @nowarn).isEmpty
val res4: Boolean = false

scala> :quit
